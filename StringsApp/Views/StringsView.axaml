<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:vm="using:StringsApp.ViewModels"
             x:DataType="vm:StringsViewModel"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="450"
             x:Class="StringsApp.Views.StringsView"
             DragDrop.AllowDrop="True"
             Background="Transparent"><!-- need to set background to expand drop target to whole window -->
    <Design.DataContext>
        <vm:StringsViewModel />
    </Design.DataContext>

    <Grid RowDefinitions="Auto,*,Auto">
        <!-- Command bar -->
        <ui:CommandBar Grid.Row="0" DefaultLabelPosition="Collapsed" x:Name="CommandBar">
            <ui:CommandBar.Styles>
                <Style Selector="ui|CommandBarToggleButton">
                    <Setter Property="Width" Value="48" />
                </Style>
            </ui:CommandBar.Styles>
            <ui:CommandBar.PrimaryCommands>
                <ui:CommandBarButton Label="Open" IconSource="OpenFolder" Click="Open_Clicked" HotKey="Ctrl+O" />

                <ui:CommandBarSeparator />

                <ui:CommandBarElementContainer Padding="6 0">
                    <StackPanel Orientation="Horizontal">
                        <TextBox Height="0" Watermark="Search" MinWidth="200"
                                 Classes.clearButton="true"
                                 Classes.invalid="{Binding !IsSearchTextValid}"
                                 Text="{Binding SearchText}"
                                 x:Name="SearchTextBox">
                            <TextBox.KeyBindings>
                                <KeyBinding Gesture="Enter" Command="{Binding RunSearch}" />
                            </TextBox.KeyBindings>
                            <TextBox.Styles>
                                <Style Selector="TextBox.invalid Border">
                                    <Setter Property="Background"
                                            Value="{DynamicResource SystemFillColorCriticalBackgroundBrush}" />
                                </Style>
                            </TextBox.Styles>
                        </TextBox>
                    </StackPanel>
                </ui:CommandBarElementContainer>

                <ui:CommandBarElementContainer Padding="6 0"
                                               IsVisible="{Binding !!SearchProgress}"
                                               Width="32" Margin="0 0 8 0"
                                               ToolTip.Tip="Search progress">
                    <ui:ProgressRing Value="{Binding SearchProgress}"
                                     Minimum="0"
                                     Maximum="{Binding AllStringResults.Count}"
                                     IsIndeterminate="False"
                                     Height="25" />
                </ui:CommandBarElementContainer>
                <ui:CommandBarElementContainer Padding="6 0"
                                               IsVisible="{Binding !SearchProgress}"
                                               Width="32" Margin="0 0 8 0"
                                               ToolTip.Tip="Search progress">
                    <ui:FontIcon Glyph="&#xE10B;"
                                 FontFamily="{StaticResource SymbolThemeFontFamily}"
                                 FontSize="20" />
                </ui:CommandBarElementContainer>

                <ui:CommandBarToggleButton IconSource="Font" ToolTip.Tip="Case sensitive"
                                           IsCompact="True"
                                           IsChecked="{Binding IsCaseSensitiveEnabled}" />
                <ui:CommandBarToggleButton IconSource="Code" ToolTip.Tip="Regex"
                                           IsChecked="{Binding IsRegexEnabled}" />

                <ui:CommandBarSeparator />

                <ui:CommandBarElementContainer Padding="4 0" VerticalContentAlignment="Center">
                    <ui:NumberBox Minimum="1"
                                  Value="{Binding MinimumStringLength}"
                                  SpinButtonPlacementMode="Inline"
                                  ToolTip.Tip="Minimum string length" />
                </ui:CommandBarElementContainer>

                <ui:CommandBarElementContainer HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Padding="4 0">
                    <DropDownButton Content="{Binding SelectedEncoding.EncodingName}">
                        <DropDownButton.Flyout>
                            <Flyout>
                                <StackPanel Spacing="10">
                                    <TextBox Watermark="Filter" Text="{Binding EncodingFilter}"
                                             Classes.clearButton="true" />
                                    <ScrollViewer MaxHeight="300" MinWidth="400" IsScrollChainingEnabled="False">
                                        <ListBox ItemsSource="{Binding FilteredEncodings}"
                                                 SelectedItem="{Binding SelectedEncoding}">
                                            <ListBox.DisplayMemberBinding>
                                                <MultiBinding StringFormat="{}{0} [{1}]">
                                                    <Binding Path="EncodingName" />
                                                    <Binding Path="WebName" />
                                                </MultiBinding>
                                            </ListBox.DisplayMemberBinding>
                                        </ListBox>
                                    </ScrollViewer>
                                </StackPanel>
                            </Flyout>
                        </DropDownButton.Flyout>
                    </DropDownButton>
                </ui:CommandBarElementContainer>

                <ui:CommandBarElementContainer HorizontalAlignment="Center" VerticalAlignment="Center" Padding="4 0">
                    <ComboBox ItemsSource="{Binding AllOffsetFormatters}"
                              SelectedItem="{Binding SelectedOffsetFormatter}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </ui:CommandBarElementContainer>

                <ui:CommandBarSeparator />

                <ui:CommandBarElementContainer>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12 0"
                               Theme="{DynamicResource CaptionTextBlockStyle}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:N0} / {1:N0}">
                                <Binding Path="FilteredStrings.Count" />
                                <Binding Path="AllStringResults.Count" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </ui:CommandBarElementContainer>

                <ui:CommandBarElementContainer IsVisible="False">
                    <!--
                    Hidden element to workaround HotKeys from secondary menus not registering until they're shown.
                    Can't use Window.KeyBindings due to being inside a UserControl.
                    -->
                    <StackPanel>
                        <Button Command="{Binding ShowGoToDialog}" HotKey="Ctrl+G" />
                        <Button Command="{Binding FocusSearchBox}" HotKey="Ctrl+F" />
                    </StackPanel>
                </ui:CommandBarElementContainer>
            </ui:CommandBar.PrimaryCommands>

            <ui:CommandBar.SecondaryCommands>
                <ui:CommandBarButton Label="Go to..." IconSource="Go" Command="{Binding ShowGoToDialog}"
                                     HotKey="Ctrl+G" />
                <ui:CommandBarButton Label="Export current strings" IconSource="Save" Click="Export_Clicked" />
                <ui:CommandBarButton Label="Export all strings" IconSource="Save" Click="Export_Clicked" Tag="all" />
                <ui:CommandBarButton Label="Close file" IconSource="Clear" Command="{Binding CloseFile}" />
                <ui:CommandBarSeparator />
                <ui:CommandBarButton Label="Settings" IconSource="Settings" Click="Settings_OnClick" />
            </ui:CommandBar.SecondaryCommands>
        </ui:CommandBar>

        <!-- Strings table -->
        <TreeDataGrid Grid.Row="1"
                      IsVisible="{Binding LoadedFile, Converter={x:Static ObjectConverters.IsNotNull}}"
                      x:Name="Tree"
                      Source="{Binding StringsSource}"
                      FontFamily="{Binding Font}"
                      TemplateApplied="Tree_OnTemplateApplied">
            <TreeDataGrid.Styles>
                <Style Selector="ScrollBar">
                    <Setter Property="AllowAutoHide" Value="False" />
                </Style>
                <Style Selector="TreeDataGridTextCell, TreeDataGridColumnHeader">
                    <Setter Property="Padding" Value="8 2 8 2"/>
                </Style>
            </TreeDataGrid.Styles>
            <TreeDataGrid.ContextMenu>
                <ContextMenu IsEnabled="{Binding !!StringsSource.RowSelection.Count}">
                    <MenuItem Header="Copy start" Click="CopyRow_OnClick" Tag="Start" />
                    <MenuItem Header="Copy end" Click="CopyRow_OnClick" Tag="End" />
                    <MenuItem Header="Copy string" Click="CopyRow_OnClick" Tag="String" />
                </ContextMenu>
            </TreeDataGrid.ContextMenu>
        </TreeDataGrid>

        <StackPanel Grid.Row="1"
                    IsVisible="{Binding LoadedFile, Converter={x:Static ObjectConverters.IsNull}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <TextBlock>Drag and drop a file to open</TextBlock>
        </StackPanel>

        <!-- Footer -->
        <Border IsVisible="{Binding ProgressText, Converter={x:Static ObjectConverters.IsNotNull}}"
                Grid.Row="2"
                BorderBrush="{DynamicResource DividerStrokeColorDefaultBrush}"
                BorderThickness="0 1 0 0"
                Padding="5 5 5 5">
            <Grid ColumnDefinitions="*,Auto,Auto">
                <TextBlock Grid.Column="0" Text="{Binding ProgressText}" VerticalAlignment="Center" />
                <Button Grid.Column="2"
                        Margin="10 0 0 0"
                        Content="Cancel"
                        Command="{Binding CancelTask}">
                    <Button.Styles>
                        <Style Selector="AccessText">
                            <Setter Property="Theme" Value="{DynamicResource CaptionTextBlockStyle}" />
                        </Style>
                    </Button.Styles>
                </Button>
                <ProgressBar Grid.Column="1" Value="{Binding ProgressValue}" />
            </Grid>
        </Border>
    </Grid>
</UserControl>